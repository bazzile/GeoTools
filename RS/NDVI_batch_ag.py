# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# NDVI_batch_ag.py
# Created on: 2017-08-03 13:43:54.00000
#   (generated by ArcGIS/ModelBuilder)
# Description:
# ---------------------------------------------------------------------------

# Import arcpy module
import os
import time
import arcpy
from arcpy.sa import *
import re

# Local variables:
src_folder = r"C:\toProcess\Tazovsky\2016"
red_band = None
nir_band = None

# regex = re.compile(r'.*_B[4,5]\.TIF$')
for dirpath, dirnames, filenames in os.walk(src_folder):
    for dirname in dirnames:
        dir_path = os.path.join(dirpath, dirname)
        for f in os.listdir(dir_path):
            m1 = re.search(r'.*_B5\.TIF$', f)
            if m1 is not None:
                nir_band = os.path.join(dir_path, m1.group())
                nir_band_raster = Float(Raster(nir_band))
            m2 = re.search(r'.*_B4\.TIF$', f)
            if m2 is not None:
                red_band = os.path.join(dir_path, m2.group())
                red_band_raster = Float(Raster(red_band))
            if nir_band is not None and red_band is not None:
                image_id = nir_band.split('_B5')[0]
                # Process: Raster Calculator
                time.sleep(3)
                ndvi_raster = (nir_band_raster - red_band_raster) / (nir_band_raster + red_band_raster)
                ndvi_raster.save(os.path.join(dir_path, image_id + '_NDVI.tif'))
                red_band = None
                nir_band = None
                # del red_band, nir_band, ndvi_raster
                # arcpy.gp.RasterCalculator_sa("Float(\"%nir_band%\" - \"%red_band%\") / Float(\"%nir_band%\" + \"%red_band%\")", NDVI_raster)

                # ndvi_bands = filter(regex.match, [fname for fname in os.listdir(os.path.join(dirpath, dirname))])
                # if len(ndvi_bands) >= 2:
                #     print(ndvi_bands)
